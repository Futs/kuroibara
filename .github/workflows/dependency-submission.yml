name: Dependency Submission

on:
  push:
    branches: [main, dev]
    paths:
      - 'backend/requirements.txt'
      - 'frontend/app/package.json'
      - 'frontend/app/package-lock.json'
  pull_request:
    branches: [main, dev]
    paths:
      - 'backend/requirements.txt'
      - 'frontend/app/package.json'
      - 'frontend/app/package-lock.json'
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  dependency-submission:
    name: Submit Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Python dependency submission
      - name: Submit Python dependencies
        uses: actions/dependency-review-action@v4
        with:
          config-file: '.github/dependency-review-config.yml'
        continue-on-error: true

      # Alternative Python dependency submission using pip-audit
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Generate Python dependency tree
        run: |
          cd backend
          pip install -r requirements.txt
          pip list --format=json > ../python-dependencies.json
        continue-on-error: true

      # Node.js dependency submission
      - name: Install Node.js dependencies
        run: |
          cd frontend/app
          npm ci

      - name: Submit Node.js dependencies
        uses: actions/dependency-review-action@v4
        with:
          config-file: '.github/dependency-review-config.yml'
        continue-on-error: true

      # Upload dependency artifacts for analysis
      - name: Upload dependency artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-analysis
          path: |
            python-dependencies.json
            frontend/app/package-lock.json
          retention-days: 30

      # Security scanning with Snyk (if token is available)
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/setup@master
        continue-on-error: true

      - name: Snyk monitor
        run: |
          # Monitor Python dependencies
          cd backend
          snyk monitor --file=requirements.txt --package-manager=pip || echo "Snyk monitoring failed for Python"
          
          # Monitor Node.js dependencies
          cd ../frontend/app
          snyk monitor --file=package.json || echo "Snyk monitoring failed for Node.js"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  # Alternative dependency submission using GitHub's built-in action
  github-dependency-submission:
    name: GitHub Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Manual dependency submission for Python
      - name: Generate Python dependency snapshot
        run: |
          cd backend
          pip install -r requirements.txt
          pip list --format=json > ../python-deps-snapshot.json
          echo "Python dependencies snapshot created"
        continue-on-error: true

      # Manual dependency submission for Node.js
      - name: Generate Node.js dependency snapshot
        run: |
          cd frontend/app
          npm list --json > ../../nodejs-deps-snapshot.json
          echo "Node.js dependencies snapshot created"
        continue-on-error: true

      # Upload snapshots as artifacts
      - name: Upload dependency snapshots
        uses: actions/upload-artifact@v4
        with:
          name: dependency-snapshots
          path: |
            python-deps-snapshot.json
            nodejs-deps-snapshot.json
        continue-on-error: true
